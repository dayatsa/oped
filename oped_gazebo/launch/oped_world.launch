<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find oped_gazebo)/worlds/oped.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find oped_description)/urdf/oped.urdf'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model oped -param robot_description -z 0.22"/>


  <!-- <node name="floor_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="ignore_timestamp" type="bool" value="true" />
  </node>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find floor_description)/rviz/floor.rviz" />

  <node name="floor_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="true"/>
      <rosparam param="/source_list">[floor/floor_joint_states]</rosparam>
  </node> -->

  <!-- ros_control rrbot launch file -->
  <include file="$(find oped_control)/launch/oped_control.launch">
  </include>

</launch>